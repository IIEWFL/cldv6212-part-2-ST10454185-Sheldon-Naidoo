@model IEnumerable<RetailManagementApp.Models.QueueLogViewModel>

@{
    ViewData["Title"] = "Transaction Logs";
}

<script src="https://cdn.tailwindcss.com"></script>
<style>
    body {
        font-family: 'Inter', sans-serif;
        background-color: #f0f4f8;
    }
    .log-table tbody tr:nth-child(even) {
        background-color: #f9fbfd; 
    }
</style>

<div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
    <header class="mb-8">
        <h1 class="text-4xl font-extrabold text-gray-900 tracking-tight flex items-center gap-3">
            <svg class="w-8 h-8 text-indigo-500" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-5h6v5m-6 0h6m-6 0h.01M12 4v4m0 0h.01M4 4h16a2 2 0 012 2v12a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2z" /></svg>
            @ViewData["Title"]
        </h1>
        <p class="mt-2 text-lg text-gray-600">
            Real-time view of recent queue messages, reflecting all order creation, update, and deletion activities.
        </p>
    </header>

    <!-- Navigation and Export Actions -->
    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4">
        <a asp-action="Index" class="inline-flex items-center text-indigo-600 hover:text-indigo-800 font-medium transition duration-150">
            <svg class="h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" /></svg>
            Back to Orders List
        </a>

        <!-- Export Button -->
        <form asp-action="ExportLog" method="post" class="inline-block">
            @Html.AntiForgeryToken()
            <button type="submit" class="inline-flex items-center bg-gray-800 hover:bg-gray-900 text-white font-bold py-3 px-6 rounded-xl shadow-lg transition duration-300 transform hover:scale-[1.02] focus:ring-4 focus:ring-gray-400 focus:ring-opacity-50">
                <svg class="w-5 h-5 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" /></svg>
                Generate & Export Log File
            </button>
        </form>
    </div>

    <!-- Success Message Block -->
    @if (TempData["LogExportSuccess"] != null)
    {
        <div class="bg-indigo-100 border-l-4 border-indigo-500 text-indigo-800 p-4 mb-6 rounded-lg shadow-md" role="alert">
            <p class="font-bold">Export Initiated!</p>
            <p>@TempData["LogExportSuccess"]</p>
        </div>
    }

    <!-- Log Table Card Container -->
    <div class="shadow-xl overflow-hidden border border-gray-200 sm:rounded-2xl">
        <table class="min-w-full divide-y divide-gray-200 log-table">
            <thead class="bg-gray-50 border-b border-gray-200">
                <tr>
                    <th scope="col" class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Message ID (ID)
                    </th>
                    <th scope="col" class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Operation
                    </th>
                    <th scope="col" class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Customer
                    </th>
                    <th scope="col" class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Order Key (PK/RK)
                    </th>
                    <th scope="col" class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Time Queued
                    </th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-100">
                @if (Model != null && Model.Any())
                {
                    @foreach (var item in Model)
                    {
                        <tr>
                            <!-- Message ID -->
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-mono text-xs">
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>

                            <!-- Operation Type -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                @{
                                    var isDelete = item.OperationType == "DELETE";
                                    var badgeClass = isDelete ? "bg-red-100 text-red-700" : "bg-green-100 text-green-700";
                                }
                                <span class="px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full @badgeClass">
                                    @Html.DisplayFor(modelItem => item.OperationType)
                                </span>
                            </td>

                            <!-- Customer Name -->
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800">
                                @Html.DisplayFor(modelItem => item.CustomerName)
                            </td>

                            <!-- Order Key -->
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 font-mono">
                                @Html.DisplayFor(modelItem => item.PartitionKey) / @Html.DisplayFor(modelItem => item.RowKey)
                            </td>

                            <!-- Time Queued -->
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                @Html.DisplayFor(modelItem => item.QueueTime)
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="px-6 py-12 whitespace-nowrap text-center text-lg text-gray-500 bg-gray-50">
                            <svg class="mx-auto h-10 w-10 text-gray-400 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8h10M7 12h4m1 8h.01M16 20h2a2 2 0 002-2V6a2 2 0 00-2-2H4a2 2 0 00-2 2v12a2 2 0 002 2h12" /></svg>
                            The transaction queue is currently empty.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

